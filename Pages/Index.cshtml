@page
@model RazorPagesJavaLexerParserANTLR.Pages.IndexModel

<div class="w-100 container">
    <div class="w-100 d-flex justify-content-center">
        <form method="post" asp-antiforgery="true">
            <p class="w-100">
                <label asp-for="InputExpression">Код</label><br />
                <textarea asp-for="InputExpression" id="inputTextArea" rows="30" cols="120"></textarea>
            </p>
            <input type="submit" value="Отправить" />
        </form>
    </div>
    <div class="w-100 d-flex justify-content-center">
        <div class="pt-5 view-toggle w-50 d-flex justify-content-between">
            <div>
                <input type="radio" id="showTree" name="view" value="tree" checked>
                <label for="showTree">Дерево синтаксического разбора</label>
            </div>
            <div>
                <input type="radio" id="showTable" name="view" value="table">
                <label for="showTable">Таблица лексического анализа</label>
            </div>
        </div>
    </div>
    <div class="w-100 d-flex justify-content-center">
        <div class="grid-container" id="treeContainer">
            <div class="syntax-tree" id="syntaxTreeContainer">
                <h3>Дерево синтаксического разбора</h3>
                <div id="syntaxTreeRoot"></div>
            </div>
        </div>

        <div class="lexer-table-container" id="tableContainer" style="display: none">
            <div id="lexerTableWrapper">
                <h3>Таблица лексического анализа</h3>
                <table class="lexer-table">
                    <thead>
                        <tr>
                            <th>Индекс</th>
                            <th>Тип токена</th>
                            <th>Значение</th>
                            <th>Позиция</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var token in ViewData["Tokens"] as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>())
                        {
                            <tr>
                                <td>@token.Index</td>
                                <td class="token-type">@token.TokenType</td>
                                <td>@token.Value</td>
                                <td>@token.Position</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="~/js/site.js"></script>
<script>
    var parseTree = JSON.parse('@Html.Raw(ViewData["ParseTree"])');
    renderTree(parseTree, document.getElementById('syntaxTreeRoot'));

    document.querySelectorAll('input[name="view"]').forEach(radio => {
        radio.addEventListener('change', function () {
            if (this.value === 'tree') {
                document.getElementById('treeContainer').style.display = 'block';
                document.getElementById('tableContainer').style.display = 'none';
            } else {
                document.getElementById('treeContainer').style.display = 'none';
                document.getElementById('tableContainer').style.display = 'block';
            }
        });
    });
</script>